---Preparar Red peatonal Univalle para calculo de rutas
alter table vias add column x1 double precision;
alter table vias add column y1 double precision;
alter table vias add column x2 double precision;
alter table vias add column y2 double precision;
alter table vias add column source integer;
alter table vias add column target integer;
alter table vias add column costo double precision;

---Calculo de las coordenadas iniciales de los segmentos
update vias set x1 = st_x(st_pointn(st_linemerge(geom),1));
update vias set y1 = st_y(st_pointn(st_linemerge(geom),1));

---Calculo de las coordenadas finales de los segmentos
update vias set x2 = st_x(st_pointn(st_linemerge(geom), st_numpoints(st_linemerge(geom))));
update vias set y2 = st_y(st_pointn(st_linemerge(geom), st_numpoints(st_linemerge(geom))));


---Creacion de topología de RED
select pgr_createtopology('vias',0.00001,'geom','gid');

---Creación de índices
create index ways_source_idx on vias("source");
create index ways_target_idx on vias("target");

---Asignación costo (criterio distancia)
update vias set costo=st_length(st_transform(geom,3115));


create or replace view ruteo2 as 
select seq, id1 as node, id2 as edge, cost, b.geom from pgr_dijkstra('select gid  as id,
source::integer,target::integer,costo::double precision as cost from
 vias',(select s.id::int from
(select n.id, st_distance( st_setsrid(st_makepoint (-76.533364756,3.370831158),4326),n.the_geom) 
from vias_vertices_pgr as n order by 2 asc limit 1) as s),(select g.id::int from (select b.id,st_distance(a.geom, b.the_geom)  
from fuerza_publica1 as a, vias_vertices_pgr as b
where gid = 1 order by 2 asc limit 1) as g) ,false,false) a left join vias b on (a.id2 = b.gid);

 select * from ruteo2


create or replace view ruteo_pn as select seq, id1 as node,id2 as edge, cost, 
b.geom from pgr_dijkstra('select gid  as id,
source::integer,target::integer,costo::double precision as cost from
 vias',(select s.id::int from
(select n.id, st_distance(st_setsrid(st_makepoint (-76.533364756,3.370831158),4326),n.the_geom) 
from vias_vertices_pgr as n order by 2 asc limit 1) as s),45,false,false) a left join vias b on (a.id2 = b.gid);

select * from ruteo_pn

create or replace view resultado_ruteo as select seq , id1 as node,
id2 as edge, cost, b.geom from pgr_dijkstra('select gid as id, 
			source::integer,
		target::integer,
		costo::double precision as cost
		from vias',1114,351,false,false) a
		left join vias b on (a.id2=b.gid);

select * from resultado_ruteo
select * from vias

create table fuerza_publica1 as
select gid, name,localizaci,tipo, st_centroid(st_union(geom)) as geom from fuerza_publica group by gid, name,localizaci,tipo ;


select r.count as conteo, r.tipo as tipo from reporte r  group by r.tipo



select distinct r.count as conteo, b.barrio as tipo from reporte r, barrios b where st_intersects(b.geom,st_setsrid(st_makepoint (r.x,r.y),4326)) group by b.barrio